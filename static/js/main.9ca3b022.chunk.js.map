{"version":3,"sources":["pages/home/index.scss","app.scss","serviceWorker.js","pages/notFound/index.js","mobx/home.js","pages/home/index.js","pages/router.js","App.js","Nesting.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","unregister","navigator","serviceWorker","ready","then","registration","catch","error","console","message","history","createBrowserHistory","NotFound","status","title","subTitle","extra","type","onClick","goBack","observable","time","Index","observer","lists","homeLogic","map","item","key","className","style","titleBox","contentBox","eachContent","href","target","rel","Component","Router","exact","path","component","Home","Header","Content","Footer","App","useObserver","minHeight","siteLayout","siteLayoutBackground","textAlign","fontSize","margin","padding","Nesting","ReactDOM","render","document","getElementById"],"mappings":"0FACAA,EAAOC,QAAU,CAAC,SAAW,wBAAwB,WAAa,0BAA0B,YAAc,6B,mBCA1GD,EAAOC,QAAU,CAAC,KAAO,kBAAkB,WAAa,wBAAwB,qBAAuB,oC,iCCDvG,8CAYoBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAgHC,SAASC,IACV,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaL,gBAEdM,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,e,qOCrItBC,EAAUC,cACD,SAASC,IAIpB,OACI,uBACIC,OAAO,MACPC,MAAM,MACNC,SAAS,8CACTC,MACI,uBAAQC,KAAK,UAAUC,QATlB,WACbR,EAAQS,WAQA,e,iFCHD,M,wGATZC,K,wEACO,CACN,CACEC,KAAM,aACNP,MAAO,gC,oBCuBEQ,EAzBdC,Y,yKAEW,IACAC,EAAUC,EAAVD,MACR,OACE,6BAEIA,EAAME,KAAI,SAAAC,GAAI,OACZ,yBAAKC,IAAKD,EAAKb,MAAOe,UAAWC,IAAMC,UACrC,2BAAIJ,EAAKN,MACT,yBAAKQ,UAAWC,IAAME,YACpB,4BAAKL,EAAKb,OACV,uBAAGe,UAAWC,IAAMG,aAApB,uJACA,uBAAGJ,UAAWC,IAAMG,aAApB,kCACA,uBAAGJ,UAAWC,IAAMG,aAApB,iCACA,uBAAGJ,UAAWC,IAAMG,aAApB,qBAAoC,uBAAGC,KAAK,iCAAiCC,OAAO,SAASC,IAAI,YAA7D,sC,GAdhCC,e,ECMLC,MARd,WACG,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC,kBAAC,IAAD,CAAOF,KAAK,IAAIC,UAAW7B,M,yBCFhC+B,E,IAAAA,OAAQC,E,IAAAA,QAASC,E,IAAAA,OAwBTC,MAtBf,WACE,OAAOC,aAAY,kBACjB,uBAAQjB,MAAO,CAACkB,UAAW,UACzB,uBAAQnB,UAAWC,IAAMmB,YACvB,kBAACN,EAAD,CACEd,UAAWC,IAAMoB,qBACjBpB,MAAO,CAACqB,UAAW,SAAUC,SAAU,KAFzC,WAKA,kBAACR,EAAD,CAASd,MAAO,CAACuB,OAAQ,SACvB,yBAAKvB,MAAO,CAACwB,QAAS,GAAIN,UAAW,MACnC,kBAAC,EAAD,QAGJ,kBAACH,EAAD,CAAQf,MAAO,CAACqB,UAAW,WAA3B,4EACe,6BADf,2DCnBO,SAASI,IACpB,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOf,KAAK,IAAIC,UAAWK,K,kBCCvCU,IAASC,OACL,kBAAC,IAAD,KACI,kBAACF,EAAD,OAENG,SAASC,eAAe,SAM1BzD,Q","file":"static/js/main.9ca3b022.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"titleBox\":\"index_titleBox__DyDZ4\",\"contentBox\":\"index_contentBox__3psAj\",\"eachContent\":\"index_eachContent__3P97I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"app_logo__AMB6i\",\"siteLayout\":\"app_siteLayout__2mPEV\",\"siteLayoutBackground\":\"app_siteLayoutBackground__D6KCf\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport { Result, Button } from 'antd';\nimport { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\nexport default function NotFound() {\n    const handleBack=()=>{\n        history.goBack();\n    }\n    return (\n        <Result\n            status=\"404\"\n            title=\"404\"\n            subTitle=\"Sorry, the page you visited does not exist.\"\n            extra={\n                <Button type=\"primary\" onClick={handleBack}>Back Home</Button>\n            }\n        />\n    )\n}","import {observable} from 'mobx'\n\nclass Home {\n  @observable\n  lists = [\n    {\n      time: '2021-03-01',\n      title: '商务洽谈',\n    }\n  ];\n}\n\nexport default new Home();","import React, {Component} from 'react';\nimport {observer} from 'mobx-react'\nimport homeLogic from '../../mobx/home'\nimport style from './index.scss'\n\n@observer\nclass Index extends Component {\n  render() {\n    const { lists } = homeLogic;\n    return (\n      <div>\n        {\n          lists.map(item => (\n            <div key={item.title} className={style.titleBox}>\n              <p>{item.time}</p>\n              <div className={style.contentBox}>\n                <h2>{item.title}</h2>\n                <p className={style.eachContent}>如果您有移动 app、web 网页、小程序 的开发需求，欢迎洽谈</p>\n                <p className={style.eachContent}>联系方式：</p>\n                <p className={style.eachContent}>姓名：Weili Zheng</p>\n                <p className={style.eachContent}>邮箱：<a href=\"mailto:zhengweili789@gmail.com\" target=\"_blank\" rel=\"noopener\">zhengweili789@gmail.com</a></p>\n              </div>\n            </div>\n          ))\n        }\n      </div>\n    );\n  }\n}\n\nexport default Index;","import React  from 'react'\nimport {Switch,Route} from 'react-router-dom'\nimport NotFound from \"./notFound\";\nimport Home from './home'\n function Router() {\n    return (\n        <Switch>\n            <Route exact path=\"/\" component={Home}/>\n            <Route path='*' component={NotFound}/>\n        </Switch>\n    )\n}\nexport default Router","import React from \"react\";\nimport Routers from './pages/router'\nimport {Layout,} from 'antd'\nimport style from './app.scss'\nimport {useObserver} from 'mobx-react'\n\nconst {Header, Content, Footer} = Layout;\n\nfunction App() {\n  return useObserver(() => (\n    <Layout style={{minHeight: '100vh'}}>\n      <Layout className={style.siteLayout}>\n        <Header\n          className={style.siteLayoutBackground}\n          style={{textAlign: 'center', fontSize: 24}}>\n          IT Team\n        </Header>\n        <Content style={{margin: '16px'}}>\n          <div style={{padding: 24, minHeight: 360}}>\n            <Routers/>\n          </div>\n        </Content>\n        <Footer style={{textAlign: 'center'}}>\n          本网站由郑维丽拥有和运营 <br/>\n          联系方式: zhengweili789@gmail.com</Footer>\n      </Layout>\n    </Layout>\n  ))\n}\n\nexport default App\n\n\n","import {Route, Switch} from \"react-router-dom\";\nimport React from \"react\";\nimport App from \"./App\";\nexport default function Nesting() {\n    return (\n        <Switch>\n            <Route path=\"/\" component={App}/>\n        </Switch>\n    );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Nesting from \"./Nesting\";\nimport {HashRouter} from \"react-router-dom\";\nimport 'mobx-react-lite/batchingForReactDom'\nReactDOM.render(\n    <HashRouter>\n        <Nesting/>\n    </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}